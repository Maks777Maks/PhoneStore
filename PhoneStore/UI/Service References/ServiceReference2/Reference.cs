//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UI.ServiceReference2 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IContract")]
    public interface IContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetPhones", ReplyAction="http://tempuri.org/IContract/GetPhonesResponse")]
        WCF.DTOModels.PhoneDTO[] GetPhones();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetPhones", ReplyAction="http://tempuri.org/IContract/GetPhonesResponse")]
        System.Threading.Tasks.Task<WCF.DTOModels.PhoneDTO[]> GetPhonesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetUsers", ReplyAction="http://tempuri.org/IContract/GetUsersResponse")]
        WCF.DTOModels.UserDTO[] GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/GetUsers", ReplyAction="http://tempuri.org/IContract/GetUsersResponse")]
        System.Threading.Tasks.Task<WCF.DTOModels.UserDTO[]> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/AddPhone", ReplyAction="http://tempuri.org/IContract/AddPhoneResponse")]
        void AddPhone(WCF.DTOModels.PhoneDTO phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/AddPhone", ReplyAction="http://tempuri.org/IContract/AddPhoneResponse")]
        System.Threading.Tasks.Task AddPhoneAsync(WCF.DTOModels.PhoneDTO phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/CreateOrder", ReplyAction="http://tempuri.org/IContract/CreateOrderResponse")]
        void CreateOrder(WCF.DTOModels.OrderDTO order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/CreateOrder", ReplyAction="http://tempuri.org/IContract/CreateOrderResponse")]
        System.Threading.Tasks.Task CreateOrderAsync(WCF.DTOModels.OrderDTO order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/AddUser", ReplyAction="http://tempuri.org/IContract/AddUserResponse")]
        void AddUser(WCF.DTOModels.UserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContract/AddUser", ReplyAction="http://tempuri.org/IContract/AddUserResponse")]
        System.Threading.Tasks.Task AddUserAsync(WCF.DTOModels.UserDTO user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IContractChannel : UI.ServiceReference2.IContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContractClient : System.ServiceModel.ClientBase<UI.ServiceReference2.IContract>, UI.ServiceReference2.IContract {
        
        public ContractClient() {
        }
        
        public ContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCF.DTOModels.PhoneDTO[] GetPhones() {
            return base.Channel.GetPhones();
        }
        
        public System.Threading.Tasks.Task<WCF.DTOModels.PhoneDTO[]> GetPhonesAsync() {
            return base.Channel.GetPhonesAsync();
        }
        
        public WCF.DTOModels.UserDTO[] GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<WCF.DTOModels.UserDTO[]> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
        
        public void AddPhone(WCF.DTOModels.PhoneDTO phone) {
            base.Channel.AddPhone(phone);
        }
        
        public System.Threading.Tasks.Task AddPhoneAsync(WCF.DTOModels.PhoneDTO phone) {
            return base.Channel.AddPhoneAsync(phone);
        }
        
        public void CreateOrder(WCF.DTOModels.OrderDTO order) {
            base.Channel.CreateOrder(order);
        }
        
        public System.Threading.Tasks.Task CreateOrderAsync(WCF.DTOModels.OrderDTO order) {
            return base.Channel.CreateOrderAsync(order);
        }
        
        public void AddUser(WCF.DTOModels.UserDTO user) {
            base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task AddUserAsync(WCF.DTOModels.UserDTO user) {
            return base.Channel.AddUserAsync(user);
        }
    }
}
